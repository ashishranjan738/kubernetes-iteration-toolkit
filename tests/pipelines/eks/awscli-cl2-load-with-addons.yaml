apiVersion: tekton.dev/v1beta1
kind: Pipeline
metadata:
  name: awscli-eks-cl2loadtest-with-addons
  namespace: tekton-pipelines
spec:
  params:
  - name: cluster-name
  - name: endpoint
  - name: servicerole
    default: ""
  - name: desired-nodes
  - name: host-cluster-node-role-arn
    default: ""
  - name: pods-per-node
  - name: nodes-per-namespace
  - name: cl2-load-test-throughput
  - name: results-bucket
  - name: slack-hook
  - name: slack-message
  - name: amp-workspace-id
    default: ""
  - name: service-role-cfn-url
    default: "https://raw.githubusercontent.com/awslabs/kubernetes-iteration-toolkit/role/tests/assets/eks_service_role.json"
  - name: node-role-cfn-url
    default: "https://raw.githubusercontent.com/awslabs/kubernetes-iteration-toolkit/role/tests/assets/eks_node_role.json"
  tasks:
  - name: slack-notification
    params:
    - name: slack-hook
      value: $(params.slack-hook)
    - name: slack-message
      value: $(params.slack-message)+"job kicked off"
    taskRef:
      kind: Task
      name:  slack-notification
  - name: create-cluster-service-role
    params:
    - name: stack-name
      value: $(params.cluster-name)-service-role
    - name: role-cfn-url
      value: $(params.service-role-cfn-url)
    - name: role-name
      value: $(params.cluster-name)-service-role
    runAfter:
    - slack-notification
    taskRef:
      kind: Task
      name: awscli-role-create
  - name: create-cluster-node-role
    params:
    - name: stack-name
      value: $(params.cluster-name)-node-role
    - name: role-cfn-url
      value: $(params.node-role-cfn-url)
    - name: role-name
      value: $(params.cluster-name)-node-role
    runAfter:
    - slack-notification
    taskRef:
      kind: Task
      name: awscli-role-create
  - name: get-preferred-role-decider
    runAfter:
      - create-cluster-node-role
      - create-cluster-service-role
    params:
      - name: cfn-service-role-arn
        value: $(tasks.create-cluster-service-role.results.role-arn)
      - name: cfn-node-role-arn
        value: $(tasks.create-cluster-node-role.results.role-arn)
      - name: param-host-cluster-node-role-arn
        value: $(params.host-cluster-node-role-arn)
      - name: param-service-role-arn
        value: $(params.servicerole)
    taskSpec:
        results:
          - name: service-role-arn
            description: holds the preferred service role Arn
          - name: node-role-arn
            description: holds the preferred node role Arn
        params:
          - name: cfn-service-role-arn
          - name: cfn-node-role-arn
          - name: param-host-cluster-node-role-arn
          - name: param-service-role-arn
        steps:
          - name: get-prefered-role
            image: alpine/k8s:1.23.13
            script: |
              echo $(params.cfn-service-role-arn) > $(results.service-role-arn.path)
              echo $(params.cfn-node-role-arn) > $(results.node-role-arn.path)
              if [ -n "$(params.param-host-cluster-node-role-arn)" ]; then
                echo $(params.param-host-cluster-node-role-arn) > $(results.node-role-arn.path)
              fi
              if [ -n "$(params.param-service-role-arn)" ]; then
                echo $(params.param-service-role-arn) > $(results.service-role-arn.path)
              fi 
  - name: create-eks-cluster
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: servicerole
      value: $(tasks.get-preferred-role-decider.results.service-role-arn)
    - name: endpoint
      value: $(params.endpoint)
    runAfter:
    - get-preferred-role-decider
    taskRef:
      kind: Task
      name:  awscli-eks-cluster-create
    workspaces:
    - name: config
      workspace: config
  - name: create-mng-monitoring-nodes
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: host-cluster-node-role-arn
      value: $(tasks.get-preferred-role-decider.results.node-role-arn)
    - name: endpoint
      value: $(params.endpoint)
    - name: desired-nodes
      value: "1"
    - name: max-nodes
      value: "1"
    - name: host-instance-types
      value: "m5.4xlarge"
    - name: host-taints
      value: "key=monitoring,value=true,effect=NO_SCHEDULE"
    - name: nodegroup-prefix
      value: "monitoring-"
    runAfter:
    - create-eks-cluster
    taskRef:
      kind: Task
      name:  awscli-eks-nodegroup-create
  - name: create-mng-nodes
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: desired-nodes
      value: $(params.desired-nodes)
    - name: host-cluster-node-role-arn
      value: $(tasks.get-preferred-role-decider.results.node-role-arn)
    - name: endpoint
      value: $(params.endpoint)
    runAfter:
    - create-mng-monitoring-nodes
    taskRef:
      kind: Task
      name:  awscli-eks-nodegroup-create
  - name: install-fluentbit-addon
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: endpoint
      value: $(params.endpoint)
    runAfter:
    - create-mng-nodes
    taskRef:
      kind: Task
      name: eks-addon-fluentbit
  - name: create-cw-agent-addon
    params:
    - name: cluster-name
      value: $(params.cluster-name)
    - name: endpoint
      value: $(params.endpoint)
    runAfter:
    - create-mng-nodes
    taskRef:
      kind: Task
      name:  eks-addon-cwagent
  - name: generate
    params:
    - name: pods-per-node
      value: $(params.pods-per-node)
    - name: nodes-per-namespace
      value: $(params.nodes-per-namespace)
    - name: cl2-load-test-throughput
      value: $(params.cl2-load-test-throughput)
    - name: results-bucket
      value: $(params.results-bucket)
    - name: nodes
      value: $(params.desired-nodes)
    - name: amp-workspace-id
      value: '$(params.amp-workspace-id)'
    runAfter:
    - install-fluentbit-addon
    - create-cw-agent-addon
    taskRef:
      kind: Task
      name: load
    workspaces:
    - name: source
      workspace: source
    - name: config
      workspace: config
    - name: results
      workspace: results
  finally:    
  - name: teardown
    params:   
    - name: cluster-name
      value: $(params.cluster-name)
    - name: endpoint
      value: $(params.endpoint)
    - name: slack-hook
      value: $(params.slack-hook)
    - name: slack-message
      value: $(params.slack-message)+"job completed"
    - name: service-role-stack-name
      value: $(params.cluster-name)-service-role
    - name: node-role-stack-name
      value: $(params.cluster-name)-node-role
    taskRef:
      kind: Task
      name:  awscli-eks-cluster-teardown
  workspaces:
  - name: config
  - name: source
  - name: results